import { notFound } from "next/navigation";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { setRequestLocale } from "next-intl/server";
import { routing } from "@/i18n/routing";

import type { Metadata } from "next";
import { Noto_Sans } from "next/font/google";
import "./globals.css";
import MainThemeProvider from "@/components/providers/main-theme-provider";


const notoSans = Noto_Sans({
  variable: "--font-noto-sans",
  subsets: ["latin"],
  weight: ["400", "500", "600"], // you can pick which weights you need
  display: "swap",
});

export const metadata: Metadata = {
  title: "Clear cutoff",
  description: "Generated by create next app",
  icons: {
    icon: [
      {
        url: "/icon/favicon.ico",
        type: "image/x-icon",
      },
      {
        url: "/icon/favicon-png.png",
        sizes: "32x32",
        type: "image/png",
      },
      {
        url: "/icon/favicon-png.png",
        sizes: "16x16",
        type: "image/png",
      },
    ],
  },
};

export default async function LocaleLayout({
  children,
  params,
}: LayoutProps<"/[locale]">) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }


  const fontClass = notoSans.variable;
  // Enable static rendering
  setRequestLocale(locale);
  return (
    <html lang={locale} suppressHydrationWarning>
      <body className={`${fontClass} antialiased`}>
        <MainThemeProvider>
          <NextIntlClientProvider>{children}</NextIntlClientProvider>
        </MainThemeProvider>
      </body>
    </html>
  );
}
